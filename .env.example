NEXTAUTH_URL=http://localhost:4002

# You can use openssl to generate a random 32 character key: openssl rand -base64 32
NEXTAUTH_SECRET=rZTFtfNuSMajLnfFrWT2PZ3lX8WZv7W/Xs2H8hkEY6g=
 
# SMTP / Email settings 
SMTP_HOST=localhost
SMTP_PORT=1025
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM=noreply.dev@boxyhq.io


APP_URL=http://localhost:4002

SVIX_URL=https://api.eu.svix.com
SVIX_API_KEY=

GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=

GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

RETRACED_URL=
RETRACED_API_KEY=
RETRACED_PROJECT_ID=

# Hide landing page and redirect to login page
HIDE_LANDING_PAGE=false

# SSO groups can be prefixed with this identifier in order to avoid conflicts with other groups.
# For example boxyhq-admin would be resolved to admin, boxyhq-member would be resolved to member, etc.
GROUP_PREFIX=boxyhq-

# Users will need to confirm their email before accessing the app feature
CONFIRM_EMAIL=false

# Disable non-business email signup
DISABLE_NON_BUSINESS_EMAIL_SIGNUP=false

# Mixpanel
NEXT_PUBLIC_MIXPANEL_TOKEN=


#Database
# You can use the following command to create a database in Postgres:
DBUSER=admin
DBPASS=password
DBNAME=boxyhq
DBPORT=5432


# If you are using Docker, you can retrieve the values from: docker-compose.yml
DATABASE_URL=postgresql://${DBUSER}:${DBPASS}@localhost:${DBPORT}/${DBNAME}

# Postgres Admin
PGADMIN_DEFAULT_EMAIL=dev@boxyhq.ai
PGADMIN_DEFAULT_PASSWORD=password
PGADMIN_PORT=5050

# Redis
REDIS_PASSWORD=password
REDIS_PORT=6379
REDIS_UI_PORT=7843

# Minio S3
MINIO_PORT=9000
